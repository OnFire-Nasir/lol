name: Create VPS

on:
  workflow_dispatch:
  repository_dispatch:
    types: [create-vps]

jobs:
  start-vps:
    runs-on: ubuntu-latest
    timeout-minutes: 360

    steps:
      - name: ⬇️ Checkout
        uses: actions/checkout@v3

      - name: Clean-up
        uses: rokibhasansagar/slimhub_actions@main

      - name: Swap Space
        uses: pierotofy/set-swap-space@master
        with:
          swap-size-gb: 24

      - name: Build Environment
        run: |
          sudo apt-get update
          sudo apt-get install -y \
              bc bison build-essential ccache curl flex g++-multilib gcc-multilib \
              git gnupg gperf libncurses5-dev libssl-dev libtool pkg-config \
              python3 python3-pip rsync unzip wget zip zlib1g-dev aria2
          git clone https://gitlab.com/OrangeFox/misc/scripts.git -b master
          cd scripts
          sudo bash setup/android_build_env.sh

      - name: Set-up Manifest
        if: ${{ inputs.MANIFEST_BRANCH == '11.0' || inputs.MANIFEST_BRANCH == '12.1' }}
        run: |
          mkdir -p "${GITHUB_WORKSPACE}/OrangeFox"
          cd "${GITHUB_WORKSPACE}/OrangeFox"
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com"
          git clone https://gitlab.com/OrangeFox/sync.git -b master
          cd sync
          ./orangefox_sync.sh --branch "${{ inputs.MANIFEST_BRANCH }}" --path "${GITHUB_WORKSPACE}/OrangeFox/fox_${{ inputs.MANIFEST_BRANCH }}"

      - name: 📁 Create dirs
        run: mkdir -p links .backup

      - name: 💾 Restore backup
        run: |
          name="${{ github.event.client_payload.vps_name }}"
          if [ "${{ github.event.client_payload.backup }}" == "true" ]; then
            echo "📦 Restoring backup..."
            unzip ".backup/$name.zip" -d . || echo "⚠️ No backup to restore."
          fi
          
      - name: 🔐 Start tmate session
        run: |
          echo "⚙️ Launching tmate..."
          sudo apt update && sudo apt install -y tmate
          tmate -S /tmp/tmate.sock new-session -d
          tmate -S /tmp/tmate.sock wait tmate-ready
          SSH=$(tmate -S /tmp/tmate.sock display -p '#{tmate_ssh}')
          echo "$SSH" > "links/${{ github.event.client_payload.vps_name || 'manual-vps' }}.txt"
          echo "✅ SSH Ready: $SSH"
          sleep 60

      - name: 📦 Save backup
        run: |
          name="${{ github.event.client_payload.vps_name || 'manual-vps' }}"
          zip -r ".backup/$name.zip" . -x ".git/*" ".github/*" ".backup/*" || true

      - name: 📤 Push updates
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "🔁 Updated SSH + backup for ${{ github.event.client_payload.vps_name || 'manual-vps' }}"
          file_pattern: 'links/*.txt .backup/*.zip'

      - name: ⏳ Keep session alive
        run: |
          echo "⏳ Keeping session alive..."
          while true; do
            echo "$(date): keepalive"
            sleep 30
          done
          
